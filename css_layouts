//Lembre-se de que para cada seletor classe no CSS há um <div class="nome-da-classe"></div> no HTML.

.exemplo-de-grid-layout{
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 10 px;
}

.grid-item{
  background-color:
  color:
  padding:
  text-align:
  border-radius:
}

.exemplo-de-flexbox-layout{
  display: flex;
  justify-content: space-between;
  gap: 10 px;
}

.flexbox-item{
  background-color:
  color:
  padding:
  text-align:
  flex: 1; //Permite que os itens do flexbox se dimensionem igualmente dentro do container.
  border-radius:
}

.exemplo-de-float-layout{
  overflow: hidden;
}

.float-item{
  width:
  margin:
  background-color:
  color:
  padding:
  text-align:
  float:
  border-radius:
}

/* Para layout centralizado, no HTML criam-se 2 classes, por exemplo: 
<div class="centered-container"></div> Para centralizar o conteúdo.
  <div class="content"></div> Dentro dessa div há o conteúdo (body).
    <h1>...
      <p>... */

body{
  height:
  margin:
  display:
  align-itens:
  justify-content:
  font-family:
  background-color:
}

.centered-container{
  display:
  align-items:
  justify-content:
  width:
  height:
  background-color:
  box-shadow:
}

// Para layout fixo:

body{
  font-family:
  margin: 0;
  padding:
  background-color:
  display:
  flex-direction:
  align-itens:
}

header,
footer{
  width:
  background-color:
  color:
  text-align:
  padding:
}

main{
  flex: 1; // Usa o modelo de layout flexbox para o conteúdo principal.
  display: flex; // Centraliza os itens no eixo transversal (vertical).
  align-itens: // Centraliza os itens no eixo principal (horizontal).
  justify-content: center;
  width: 100%;
}

.fixed-container{
  width:
  background-color:
  padding:
  box-shadow:
  border-radius:
  text-align:
}

// Para layout elástico, são utilizadas unidades relativas como em ou rem para responsividade no tamanho da fonte ou no zoom, e display flex para que os elementos possam se ajustar dinamicamente:

body{
  font-family:
  margin:
  padding:
  background-color:
  display:
  flex-direction: column;
  align-items: center;
}

main{
...
}

.elastic-container{
  width: 80%;
  max-width: 800px;
  background-color:
  padding: 20px;
  box-shadow: o o 10px color;
  border-radius: 8px;
  text-align: center;
}
